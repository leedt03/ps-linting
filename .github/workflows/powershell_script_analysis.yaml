name: PowerShell Script Analysis

on:
  push:
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer

      - name: Analyze PowerShell Files and Modules
        shell: pwsh
        run: |
          $scriptFiles = Get-ChildItem -Path . -Filter "*.ps1" -Recurse -File
          $moduleFiles = Get-ChildItem -Path modules -Filter "*.ps1m1" -Recurse -File
          $allFiles = $scriptFiles + $moduleFiles

          # $analysisResults = foreach ($file in $allFiles) {
          #   Invoke-ScriptAnalyzer -Path $file -ErrorAction Stop
          # }

          foreach ($file in $allFiles) {
            $analysisResult = Invoke-ScriptAnalyzer -Path $file
          
            # Print file name and violation count
            Write-Host "Analyzing file: $($file.FullName)"
            Write-Host "Violations found: $($analysisResult.Diagnostics.Count)"
          
            # Optionally print individual violations
            if ($analysisResult.Diagnostics.Count -gt 0) {
              foreach ($violation in $analysisResult.Diagnostics) {
                Write-Host "  - Rule: $($violation.Rule.Name) - Message: $($violation.Message)"
              }
            }
          }

      # - name: Generate Report
      #   shell: pwsh
      #   run: |
      #     $report = $analysisResults | Where-Object { $_.Diagnostics.Count -gt 0 } | Select-Object File, Rule, Message, Severity
      #     $report | ConvertTo-Html -Title "Script Analysis Report" | Out-File "report.html"

      # - name: Upload Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: script_analysis_report.html
      #     path: report.html

      - name: Annotate Commit (Optional)
        shell: pwsh
        run: |
          $warnings = $analysisResults | Where-Object { $_.Diagnostics.Count -gt 0 } | Select-Object File, Rule, Message, Severity | Format-List
          if ($warnings) {
            Write-Host "::warning:: Please review script quality issues:"
            Write-Host $warnings
            echo $warnings >> "${GITHUB_EVENT_PATH}/${env:RUNNER_OS}"
          }